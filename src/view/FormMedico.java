/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Conection.ConexaoBD;
import Dao.MedicoDao;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modelBeans.MedicoBean;
import modelBeans.TabelaBean;

/**
 *
 * @author Usuario
 */
public class FormMedico extends javax.swing.JFrame {

    MedicoBean medico = new MedicoBean();
    MedicoDao control = new MedicoDao();
    ConexaoBD conex = new ConexaoBD();
    int flag=0;
    String sql="select * from medicos order by nome_medico";
    
    
    public FormMedico() {
        initComponents();
        preencherTabela(sql);
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextFieldCrm = new javax.swing.JFormattedTextField();
        jTextFieldNomeMedico = new javax.swing.JTextField();
        jComboBoxEspecializacao = new javax.swing.JComboBox<>();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMedicos = new javax.swing.JTable();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jButtonPesquisar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldCod = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Nome:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, -1, -1));

        jLabel3.setText("CRM:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jLabel4.setText("Especialização:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, -1, -1));

        jFormattedTextFieldCrm.setEnabled(false);
        jPanel1.add(jFormattedTextFieldCrm, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 140, 25));

        jTextFieldNomeMedico.setEnabled(false);
        jPanel1.add(jTextFieldNomeMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 230, 25));

        jComboBoxEspecializacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Cirurgião", "Teste1", "Teste2" }));
        jComboBoxEspecializacao.setEnabled(false);
        jPanel1.add(jComboBoxEspecializacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 160, 25));

        jButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new-file_40454.png"))); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, -1));

        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_file_disk_open_searsh_loading_clipboard_1513.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, -1));

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel_stop_exit_1583.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 110, -1));

        jButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-file256_25239.png"))); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, -1));

        jButtonExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/document_delete_256_icon-icons.com_75995.png"))); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 110, -1));

        jTableMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableMedicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMedicosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMedicos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 540, 220));

        jTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 134, 25));

        jButtonPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/preview_search_find_locate_1551.png"))); // NOI18N
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 60, -1));

        jLabel5.setText("Cod:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jTextFieldCod.setEnabled(false);
        jTextFieldCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 73, 25));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 44, 690, 370);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Cadastro de Médicos");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 11, 163, 22);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Background.jpg"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 740, 450);

        setSize(new java.awt.Dimension(721, 459));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        
        if(jTextFieldNomeMedico.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "preencha o campo nome do usuario");
            

        jButtonCancelar.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonPesquisar.setEnabled(true);
        
        jTextFieldNomeMedico.requestFocus();
       
        
        
        }else if(jFormattedTextFieldCrm.getText().isEmpty()) {
             JOptionPane.showMessageDialog(rootPane, "preencha o campo CCM");
            

        jButtonCancelar.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonPesquisar.setEnabled(true);
        
        jFormattedTextFieldCrm.requestFocus();
            
            
        }else if(jComboBoxEspecializacao.getSelectedItem().equals("Selecione")){
            
            
        JOptionPane.showMessageDialog(rootPane, "Selecione uma especialidade");
            

        jButtonCancelar.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonPesquisar.setEnabled(true);
        
        jComboBoxEspecializacao.requestFocus();
            
        }else{
        
        if(flag == 1){
        

        medico.setNome(jTextFieldNomeMedico.getText());
        medico.setEspecialidade((String) jComboBoxEspecializacao.getSelectedItem());
        medico.setCrm(Integer.parseInt(jFormattedTextFieldCrm.getText()));
        
      
        control.salvar(medico);
        preencherTabela(sql);
        
        jTextFieldCod.setText("");
        jTextFieldNomeMedico.setText("");
        jFormattedTextFieldCrm.setText("");
        jComboBoxEspecializacao.setSelectedIndex(0);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonCancelar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonPesquisar.setEnabled(true);
       
        } else {
           medico.setCodigo(Long.parseLong(jTextFieldCod.getText()));
           medico.setNome(jTextFieldNomeMedico.getText());
           medico.setEspecialidade((String) jComboBoxEspecializacao.getSelectedItem());
           medico.setCrm(Integer.parseInt(jFormattedTextFieldCrm.getText()));
           
           control.Editar(medico);
           preencherTabela(sql);
           
            jTextFieldCod.setText("");
            jTextFieldNomeMedico.setText("");
            jFormattedTextFieldCrm.setText("");
            jComboBoxEspecializacao.setSelectedIndex(0);
            jComboBoxEspecializacao.setEnabled(false);
            jButtonCancelar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            jTextFieldNomeMedico.setEnabled(false);
            jFormattedTextFieldCrm.setEnabled(false);
            jComboBoxEspecializacao.setEnabled(false);
            jButtonNovo.setEnabled(true);
            jButtonPesquisar.setEnabled(true);
            
            
        }
        }
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
       
        flag=1;
        
       jButtonSalvar.setEnabled(true);
       jButtonCancelar.setEnabled(true);
       jTextFieldNomeMedico.setEnabled(true);
       jFormattedTextFieldCrm.setEnabled(true);
       jComboBoxEspecializacao.setEnabled(true);
       jTextFieldCod.setText("");
       jTextFieldNomeMedico.setText("");
       jFormattedTextFieldCrm.setText("");
       jComboBoxEspecializacao.setSelectedIndex(0);
       jButtonPesquisar.setEnabled(false);
       jButtonNovo.setEnabled(false);

       
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        jTextFieldCod.setText("");
        jTextFieldNomeMedico.setText("");
        jFormattedTextFieldCrm.setText("");
        jButtonCancelar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonEditar.setEnabled(false);
         jButtonPesquisar.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        medico.setPesquisa(jTextFieldPesquisa.getText());
      
        MedicoBean medicos = control.buscaMedico(medico);
        jTextFieldNomeMedico.setText(medico.getNome());
        jTextFieldCod.setText(String.valueOf(medico.getCodigo()));
        jFormattedTextFieldCrm.setText(String.valueOf(medico.getCrm()));// Value Of Transforma o valor em String 
        jComboBoxEspecializacao.setSelectedItem(medico.getEspecialidade());
        
        jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonEditar.setEnabled(true);
        
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
       
        flag = 2;
       jButtonSalvar.setEnabled(true);
       jButtonCancelar.setEnabled(true);
       jTextFieldNomeMedico.setEnabled(true);
       jFormattedTextFieldCrm.setEnabled(true);
       jComboBoxEspecializacao.setEnabled(true);
       jButtonEditar.setEnabled(false);
       jButtonNovo.setEnabled(false);
       jButtonExcluir.setEnabled(false);
        jButtonPesquisar.setEnabled(false);
       
       
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        
        int resposta = 0;
        
        
         resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja Realmente Excluir ?");
         
         if(resposta == JOptionPane.YES_OPTION){
      
        medico.setCodigo(Long.parseLong(jTextFieldCod.getText()));//Pega o codigo por parametro 
        control.Excluir(medico);//Eclui conforme o codigo selecionado
        preencherTabela(sql);//Atualiaza a tabela com os dados
        
        jTextFieldNomeMedico.setText("");
        jFormattedTextFieldCrm.setText("");
        jTextFieldCod.setText("");
        jComboBoxEspecializacao.setEnabled(false);
        jButtonCancelar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonExcluir.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonNovo.setEnabled(true);
        jButtonEditar.setEnabled(false);
        
         }else if(resposta == JOptionPane.NO_OPTION) {
         jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonEditar.setEnabled(true);
         }else if(resposta == JOptionPane.CANCEL_OPTION) {
        jButtonEditar.setEnabled(false);
        jButtonExcluir.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jTextFieldNomeMedico.setEnabled(false);
        jFormattedTextFieldCrm.setEnabled(false);
        jComboBoxEspecializacao.setEnabled(false);
        jButtonEditar.setEnabled(true);
         }
          
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodActionPerformed

    private void jTableMedicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMedicosMouseClicked
        
        if (evt.getClickCount() > 1) {  
            
        int resp = JOptionPane.showConfirmDialog(null, "Deseja Editar esse Campo");
        
        if(resp == JOptionPane.YES_OPTION){
       
        
            flag = 2;
            
       jButtonSalvar.setEnabled(true);
       jButtonCancelar.setEnabled(true);
       jTextFieldNomeMedico.setEnabled(true);
       jFormattedTextFieldCrm.setEnabled(true);
       jComboBoxEspecializacao.setEnabled(true);
       jButtonEditar.setEnabled(false);
       jButtonNovo.setEnabled(false);
       jButtonExcluir.setEnabled(false);
       jButtonPesquisar.setEnabled(true);
        }
            
            } else { 
        
        
        String nome_medico = ""+jTableMedicos.getValueAt(jTableMedicos.getSelectedRow(), 1);//Vai pegar o objeto selecionado e salvar na string nome_medico
        conex.conexao(); // abre a conexão
        
        conex.executaSql("select * from medicos where nome_medico='"+nome_medico+"'");
        
        try {
            conex.rs.first(); //filtra o primeiro resultado do banco
            jTextFieldCod.setText(String.valueOf(conex.rs.getInt("cod_medico")));
            jTextFieldNomeMedico.setText(conex.rs.getString("nome_medico"));
            jComboBoxEspecializacao.setSelectedItem(conex.rs.getString("especializacao_medico"));
            jFormattedTextFieldCrm.setText(conex.rs.getString("crm_medico"));
            jTextFieldNomeMedico.setEnabled(false);
            jFormattedTextFieldCrm.setEnabled(false);
            jComboBoxEspecializacao.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao selecionar dados /n"+ex);
            ex.printStackTrace();
        }
        
        conex.desconecta();
        jButtonEditar.setEnabled(true);
        jButtonExcluir.setEnabled(true);
        jButtonCancelar.setEnabled(false);
        }
    }//GEN-LAST:event_jTableMedicosMouseClicked

    private void jTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisaActionPerformed

    public void preencherTabela (String sql){
        ArrayList dados = new ArrayList();
        
        String [] colunas = new String[] {"ID","Nome","Especialidade","Crm"};
        
        conex.conexao();
        
        conex.executaSql(sql);
        try{
            conex.rs.first();//Setando o primeiro registro
            do{
                
                //Fazendo as linhas da tabela, ele vai pesquisar todos os dados do banco 
                dados.add(new Object[] {conex.rs.getInt("cod_medico"),conex.rs.getString("nome_medico"),conex.rs.getString("especializacao_medico"),conex.rs.getInt("crm_medico")}); //GetInt primeiro, porque o primeiro registo é o Codigo e ele é inteiro
                
                
            } while(conex.rs.next()); // Enquanto houver dados ele vai ficar percorrendo este registro
            
        
            
            
        }catch (SQLException ex){
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher arraylist"+ex);
            ex.printStackTrace();
        }
        
        TabelaBean tabelaBean = new TabelaBean(dados, colunas);//Instanciei e passei como paremetros minha quantidade de linhas e quantidade de colunas
        jTableMedicos.setModel(tabelaBean);
        jTableMedicos.getColumnModel().getColumn(0).setPreferredWidth(50);//Colocando o tamanho da tabela no caso 23 e o 0 é porque é o primeiro registro por ser um array e ele começa a contar do 0, onde 0 é o codigo_medico com largura 23
        jTableMedicos.getColumnModel().getColumn(0).setResizable(false);//comando para não permitir que altere o tamanho da coluna, fica desabilitado
        jTableMedicos.getColumnModel().getColumn(1).setPreferredWidth(200);//Campo Nome
        jTableMedicos.getColumnModel().getColumn(1).setResizable(false);//Campo Nome
        jTableMedicos.getColumnModel().getColumn(2).setPreferredWidth(150);//Campo Especialização
        jTableMedicos.getColumnModel().getColumn(2).setResizable(false);//Campo Especialização
        jTableMedicos.getColumnModel().getColumn(3).setPreferredWidth(133);//Campo crm
        jTableMedicos.getColumnModel().getColumn(3).setResizable(false);//Campo crm
        jTableMedicos.getTableHeader().setReorderingAllowed(false);//não é possivél reordenar o cabeçalho
        jTableMedicos.setAutoResizeMode(jTableMedicos.AUTO_RESIZE_OFF);//a TABELA NÃO PODE SER REDIMENCIONADA 
        jTableMedicos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//só é possivel selecionar um dado na tabela por vez
                
        conex.desconecta();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxEspecializacao;
    private javax.swing.JFormattedTextField jFormattedTextFieldCrm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMedicos;
    private javax.swing.JTextField jTextFieldCod;
    private javax.swing.JTextField jTextFieldNomeMedico;
    private javax.swing.JTextField jTextFieldPesquisa;
    // End of variables declaration//GEN-END:variables
}
